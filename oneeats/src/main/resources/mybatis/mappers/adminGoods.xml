<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.example.demo.admin.goods.dao.AdminGoodsDAO">
	<resultMap id="GoodsResult" type="goodsVO">
		<result column="goodsNo" property="goodsNo" />
		<result column="name" property="name" />
		<result column="price" property="price" />
		<result column="rapping" property="rapping" />
		<result column="manufacturer" property="manufacturer" />
		<result column="weight" property="weight" />
		<result column="expDate" property="expDate"
			 />
		<result column="description" property="description" />
		<result column="harvest" property="harvest" />
		<result column="creDate" property="creDate"
			javaType="java.sql.Date" />
		<result column="img1" property="img1" />
		<result column="img2" property="img2" />
		<result column="img3" property="img3" />
		<result column="img4" property="img4" />
		<result column="img5" property="img5" />
		<result column="category" property="category" />
		<result column="type" property="type" />
		<result column="memberNo" property="memberNo" />
		<result column="seller_id" property="seller_id" />
	</resultMap>


	<resultMap id="OptionResult" type="optionVO">
		<result column="optionNo" property="optionNo" />
		<result column="name" property="name" />
		<result column="option_qty" property="option_qty" />
		<result column="price" property="price" />
		<result column="goodsNo" property="goodsNo" />
	</resultMap>

	<insert id="insertNewGoods" parameterType="goodsVO">
		insert goods
		(category,name,price,rapping,manufacturer,weight,expDate,type,memberNo,description,img1,img2,img3,img4,img5)
		values(#{category},#{name},#{price},#{rapping},#{manufacturer},#{weight},#{expDate},#{type},#{memberNo},#{description},#{img1},#{img2},#{img3},#{img4},#{img5})
	</insert>


	<select id="selectNewGoodsNo" resultType="int">
		select
		ifnull(max(goodsNo),0)+1 from goods
	</select>

	<insert id="insertNewGoodsWithMap" parameterType="java.util.Map">
		insert into
		goods
		(category,name,price,rapping,manufacturer,weight,expDate,type,memberNo,description,img1,img2,img3,img4,img5)
		values(#{category},#{name},#{price},#{rapping},#{manufacturer},#{weight},#{expDate},#{type},#{memberNo},#{description},#{img1},#{img2},#{img3},#{img4},#{img5})

	</insert>

	<insert id="insertOptions" parameterType="optionVO">

		insert into `option`
		(name,option_qty,price,goodsNo) values
		( #{name},
		#{option_qty},#{price},#{goodsNo})
	</insert>

	<select id="selectGoodsList" resultMap="GoodsResult">
		select * from goods
		where type = '관리자'


		<choose>
			<when test="goods_search_type==null or goods_search_type==''">
				and 1=1
			</when>
			<when test="goods_search_type=='all'">
				and creDate Like CONCAT('%', #{goods_search_word},
				'%') or name like CONCAT('%', #{goods_search_word}, '%')
			</when>
			<otherwise>
				<choose>
					<when test="goods_search_type=='creDate'">
						and creDate like CONCAT('%', #{goods_search_word},
						'%')
					</when>
					<when test="goods_search_type=='name'">
						and name like CONCAT('%',
						#{goods_search_word}, '%')
					</when>
				</choose>
			</otherwise>
		</choose>
		<if test="category!=null and category!=''">
			and category=#{category}
		</if>
		order by creDate desc
		limit #{start}, 10


	</select>



	<select id="selectNewGoodsList" resultMap="GoodsResult"
		parameterType="java.util.Map">

		select * from goods
		where memberNo =#{memberNo}
		AND type = '관리자'
		ORDER BY creDate DESC

	</select>

	<delete id="deleteAdminGoods" parameterType="int">
<![CDATA[
delete from goods
where 
goodsNo=#{goodsNo}
]]>
	</delete>



	<select id="selectOptionsBygoodsNo" resultMap="GoodsResult"
		parameterType="int">
		select * from goods
		where goodsNo=#{goodsNo}
	</select>

	<select id="selectGoodsByGoodsNo" resultType="goodsVO">
		select * from
		goods
		where goodsNo=#{goodsNo}
	</select>



	<!-- 관리자 사업자 목록 -->
	<select id="selectSellerGoodsList" resultMap="GoodsResult">
		select goods.*, member.id as seller_id
		from goods
		inner join member on
		goods.memberNo = member.memberNo
		where goods.type = '사업자'


		<choose>
			<when test="goods_search_type==null or goods_search_type==''">
				and 1=1
			</when>
			<when test="goods_search_type=='all'">
				and creDate Like CONCAT('%', #{goods_search_word},
				'%') or name like CONCAT('%', #{goods_search_word}, '%')
			</when>
			<otherwise>
				<choose>
					<when test="goods_search_type=='creDate'">
						and creDate like CONCAT('%', #{goods_search_word},
						'%')
					</when>
					<when test="goods_search_type=='name'">
						and name like CONCAT('%',
						#{goods_search_word}, '%')
					</when>
				</choose>
			</otherwise>
		</choose>
		<if test="category!=null and category!=''">
			and category=#{category}
		</if>
		order by creDate desc
		limit #{start}, 10

	</select>


	<select id="selectNewSellerGoodsList" resultMap="GoodsResult"
		parameterType="java.util.Map">
		select goods.*, member.id as seller_id
		from goods
		inner
		join member on goods.memberNo = member.memberNo
		where goods.type = '사업자'
		ORDER BY creDate DESC




	</select>

	<select id="countGoodsNums" resultType="java.util.Map">
		select * from (
		select
		count(*) as cnt, concat('전체') as category from goods
		union (select
		count(*) as cnt, category from goods group by category order
		by cnt
		desc limit 10)) as t
		where category!='' and category!='none'
	</select>



	<select id="countSellerGoodsNums" resultType="java.util.Map">
		select * from (
		select
		count(*) as cnt, concat('전체') as category from goods
		union
		(select
		count(*) as cnt, category from goods group by category order
		by
		cnt
		desc limit 10)) as t
		where category!='' and category!='none'
	</select>



<!-- - -->

	
	<select id="selectOptionNoByGoodsNo" resultType="int" parameterType="int">
		<![CDATA[
			select optionNo	from `option` where goodsNo=#{goodsNo};
		]]>
	</select> 
	
	<update id="updateOption" parameterType="java.util.List">
    	<foreach collection="list" item="item" separator=";">
        	UPDATE `option`
        	SET
        	option_name = #{item.option_name},
        	option_qty = #{item.option_qty},
        	option_price = #{item.option_price}
        	WHERE optionNo = #{item.optionNo}
    	</foreach>
	</update>
	
	<delete id="deleteOption" parameterType="int">
		delete from `option`
		where optionNo=#{optionNo}
	</delete>
	
	<insert id="insertOptionsForMod" parameterType="java.util.List">

		insert into `option`
		(name,option_qty,price,goodsNo) values
		(#{name},
		#{option_qty},#{price},#{goodsNo})
	</insert>
	
	<insert id="insertOptionForMod" parameterType="optionVO">
		insert into `option`
		(name,option_qty,price,goodsNo) values
		(#{name},
		#{option_qty},#{price},#{goodsNo})
	</insert>
	
	<update id="updateSellerGoods" parameterType="goodsVO">
		update goods
		set
		category=#{category}, name=#{name}, price=#{price}, rapping=#{rapping}, manufacturer=#{manufacturer},
		weight=#{weight}, expDate=#{expDate}, description=#{description}
		where goodsNo=#{goodsNo}
	</update>
	
	
	<select id="selectOptionByGoodsNo" resultMap="OptionResult" parameterType="int">
		<![CDATA[
			select optionNo, name, option_qty, price, goodsNo  from `option` where goodsNo=#{goodsNo}
		]]>
	</select>



















</mapper>